import 'package:bluesky/bluesky.dart' as bsky;
import 'package:flutter/material.dart';
import 'package:test_atp/core/constants/colors.dart';
import 'package:test_atp/core/services/post_service.dart';

class ReplyComposer extends StatefulWidget {
  final PostService postService;
  final bsky.FeedView replyTo;

  const ReplyComposer({
    super.key,
    required this.postService,
    required this.replyTo,
  });

  @override
  State<ReplyComposer> createState() => _ReplyComposerState();
}

class _ReplyComposerState extends State<ReplyComposer> {
  final _textController = TextEditingController();
  bool _isLoading = false;
  static const int _maxChars = 300;

  Future<void> _submitReply() async {
    if (_textController.text.isEmpty) return;

    setState(() {
      _isLoading = true;
    });

    try {
      await widget.postService.reply(
        _textController.text,
        widget.replyTo.post.uri,
        widget.replyTo.post.cid,
      );
      if (!mounted) return;
      Navigator.pop(context);
    } catch (e) {
      debugPrint('Error posting reply: $e');
    } finally {
      setState(() {
        _isLoading = false;
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    return Container(
      decoration: const BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.vertical(top: Radius.circular(16)),
      ),
      child: Column(
        mainAxisSize: MainAxisSize.min,
        children: [
          // Header
          Padding(
            padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
            child: Row(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: [
                TextButton(
                  onPressed: () => Navigator.pop(context),
                  child: const Text('Cancel'),
                ),
                ElevatedButton(
                  onPressed: _isLoading || _textController.text.isEmpty
                      ? null
                      : _submitReply,
                  style: ElevatedButton.styleFrom(
                    backgroundColor: AppColors.blue,
                    foregroundColor: Colors.white,
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(20),
                    ),
                  ),
                  child: _isLoading
                      ? const SizedBox(
                          width: 20,
                          height: 20,
                          child: CircularProgressIndicator(
                            strokeWidth: 2,
                            valueColor:
                                AlwaysStoppedAnimation<Color>(Colors.white),
                          ),
                        )
                      : const Text('Reply'),
                ),
              ],
            ),
          ),
          const Divider(height: 1),
          // Reply content
          Padding(
            padding: EdgeInsets.only(
              bottom: MediaQuery.of(context).viewInsets.bottom,
            ),
            child: Padding(
              padding: const EdgeInsets.all(16),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  // Replying to text
                  Text(
                    'Replying to @${widget.replyTo.post.author.handle}',
                    style: TextStyle(
                      color: AppColors.blue,
                      fontSize: 14,
                    ),
                  ),
                  const SizedBox(height: 8),
                  Row(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      // User avatar
                      CircleAvatar(
                        radius: 20,
                        backgroundImage: NetworkImage(
                          widget.replyTo.post.author.avatar ??
                              'https://placeholder.com/150',
                        ),
                      ),
                      const SizedBox(width: 12),
                      Expanded(
                        child: TextField(
                          controller: _textController,
                          decoration: const InputDecoration(
                            hintText: 'Tweet your reply',
                            border: InputBorder.none,
                          ),
                          maxLines: 5,
                          maxLength: _maxChars,
                          onChanged: (_) => setState(() {}),
                        ),
                      ),
                    ],
                  ),
                  const Divider(height: 1),
                  // Bottom toolbar
                  Row(
                    children: [
                      IconButton(
                        icon: const Icon(Icons.image),
                        onPressed: () {},
                        color: AppColors.blue,
                      ),
                      IconButton(
                        icon: const Icon(Icons.gif_box),
                        onPressed: () {},
                        color: AppColors.blue,
                      ),
                      IconButton(
                        icon: const Icon(Icons.emoji_emotions),
                        onPressed: () {},
                        color: AppColors.blue,
                      ),
                      const Spacer(),
                      // Character counter
                      Text(
                        '${_textController.text.length}/$_maxChars',
                        style: TextStyle(
                          color: _textController.text.length > _maxChars * 0.9
                              ? Colors.red
                              : Colors.grey,
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ),
        ],
      ),
    );
  }

  @override
  void dispose() {
    _textController.dispose();
    super.dispose();
  }
}

// // lib/composer/widgets/reply_composer.dart
// import 'package:bluesky/bluesky.dart' as bsky;
// import 'package:flutter/material.dart';
// import 'package:test_atp/composer/widgets/base_composer.dart';
// import 'package:test_atp/core/constants/colors.dart';
// import 'package:test_atp/core/services/post_service.dart';

// class ReplyComposer extends StatelessWidget {
//   final PostService postService;
//   final bsky.FeedView replyTo;

//   const ReplyComposer({
//     super.key,
//     required this.postService,
//     required this.replyTo,
//   });

//   @override
//   Widget build(BuildContext context) {
//     return BaseComposer(
//       postService: postService,
//       hintText: 'Tweet your reply',
//       submitButtonText: 'Reply',
//       onCancel: () => Navigator.pop(context),
//       onSubmit: (text) => postService.reply(
//         text,
//         replyTo.post.uri,
//         replyTo.post.cid,
//       ),
//       header: Padding(
//         padding: const EdgeInsets.symmetric(horizontal: 16),
//         child: Text(
//           'Replying to @${replyTo.post.author.handle}',
//           style: TextStyle(
//             color: AppColors.blue,
//             fontSize: 14,
//           ),
//         ),
//       ),
//     );
//   }
// }
